services:
  ### AS core network ###
  as-router:
    extends:
      file: ./docker-compose-common.yml
      service: router
    volumes:
      - ./data/as-router:/data # `init.sh` location
    networks:
      # networks attached to the container
      as:
        # `as` network defined in the `networks` section below
        ipv4_address: 120.0.16.2 # static IP

  ### Entreprises access network ###
  entr-access-router:
    extends:
      file: ./docker-compose-common.yml
      service: router
    volumes:
      - ./data/entr-access-router:/data
    networks:
      as:
        ipv4_address: 120.0.16.3
      entr-access:
        ipv4_address: 120.0.24.2

  ### Primary entreprise network ###
  entr1-router:
    extends:
      file: ./docker-compose-common.yml
      service: router
    volumes:
      - ./data/entr1-router:/data
    networks:
      entr-access:
        ipv4_address: 120.0.24.3
      entr1-dmz:
        ipv4_address: 120.0.28.2
      entr1-intra:
        ipv4_address: 120.0.29.2

  ### DMZ network ###
  irc-server:
    image: ergochat/ergo:latest
    entrypoint: sh -c 'ip r r default via 120.0.28.2 && exec /ircd-bin/run.sh'
    cap_add:
      - NET_ADMIN
    networks:
      entr1-dmz:
        ipv4_address: 120.0.28.10

  matrix-server:
    image: matrixdotorg/synapse:latest
    entrypoint: sh -c 'apt update && apt install -y --no-install-recommends iproute2 && ip r r default via 120.0.28.2 && exec /start.py'
    environment:
      - SYNAPSE_SERVER_NAME=AS1
      - SYNAPSE_REPORT_STATS=yes
    # command: generate   # uncomment to generate config
    # to register users: 
    # docker compose exec matrix-server register_new_matrix_user http://localhost:8008 -c /data/homeserver.yaml
    cap_add:
      - NET_ADMIN
    volumes:
      - matrix-server:/data
    networks:
      entr1-dmz:
        ipv4_address: 120.0.28.20

  matrix-web:
    image: vectorim/element-web:latest
    entrypoint: sh -c 'ip r r default via 120.0.28.2 && exec /docker-entrypoint.sh nginx -g "daemon off;"'
    cap_add:
      - NET_ADMIN
    networks:
      entr1-dmz:
        ipv4_address: 120.0.28.21

  ### Intranet network ###
  entr1-client:
    extends:
      file: ./docker-compose-common.yml
      service: client
    networks:
      entr1-intra:
        ipv4_address: 120.0.29.3

  ### Clients access network ###
  user-access-router:
    extends:
      file: ./docker-compose-common.yml
      service: router
    volumes:
      - ./data/user-access-router:/data
    networks:
      as:
        ipv4_address: 120.0.16.4
      user-access:
        ipv4_address: 120.0.20.2

  ### User 1 home network ###
  user1-box:
    extends:
      file: ./docker-compose-common.yml
      service: box
    volumes:
      - ./data/user1-box:/data
    networks:
      user-access:
        ipv4_address: 120.0.20.3
      user1:
        ipv4_address: 192.168.0.2

  user1-client:
    extends:
      file: ./docker-compose-common.yml
      service: client
    volumes:
      - ./data/user1-client:/data
    networks:
      user1:
        ipv4_address: 192.168.0.3

networks:
  as:
    ipam:
      config:
        - subnet: 120.0.16.0/22
  entr-access:
    ipam:
      config:
        - subnet: 120.0.24.0/22
  # Entreprises:
  # 120.0.28.0/22
  # |- 120.0.28.0/23  Entreprise 1
  #   |- 120.0.28.0/24  DMZ
  #   |- 120.0.29.0/24  Intranet
  # |- 120.0.30.0/23  Entreprise 2
  #   |- 120.0.30.0/24  DMZ
  #   |- 120.0.31.0/24  Intranet
  entr1-dmz:
    ipam:
      config:
        - subnet: 120.0.28.0/24
  entr1-intra:
    ipam:
      config:
        - subnet: 120.0.29.0/24
  user-access:
    ipam:
      config:
        - subnet: 120.0.20.0/22
  user1:
    ipam:
      config:
        - subnet: 192.168.0.0/24

volumes:
  matrix-server: null
